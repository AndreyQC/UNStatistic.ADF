{
	"name": "df_dimgeography",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_src_staging_countries",
						"type": "DatasetReference"
					},
					"name": "outstaginggeography"
				},
				{
					"dataset": {
						"referenceName": "ds_src_dimgeography",
						"type": "DatasetReference"
					},
					"name": "outdimgeography"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dst_dimgeography",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "outmergegeography"
				},
				{
					"name": "outnewitems"
				},
				{
					"name": "outselectaftermerge"
				}
			],
			"script": "source(output(\n\t\tSourceItemId as integer,\n\t\tname as string,\n\t\t{alpha-2} as string,\n\t\t{alpha-3} as string,\n\t\t{country-code} as string,\n\t\t{iso_3166-2} as string,\n\t\tregion as string,\n\t\t{sub-region} as string,\n\t\t{intermediate-region} as string,\n\t\t{region-code} as string,\n\t\t{sub-region-code} as string,\n\t\t{intermediate-region-code} as string,\n\t\tsysCreatedAt as timestamp,\n\t\tsysChangedAt as timestamp,\n\t\tsysChangedBy as integer,\n\t\tsysCreatedBy as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> outstaginggeography\nsource(output(\n\t\tDimGeographyKey as integer,\n\t\tRegion as string,\n\t\tSubRegion as string,\n\t\tCountry as string,\n\t\tCountryCode as string,\n\t\tsysCreatedAt as timestamp,\n\t\tsysChangedAt as timestamp,\n\t\tsysChangedBy as integer,\n\t\tsysCreatedBy as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> outdimgeography\noutstaginggeography, outdimgeography join({country-code} == CountryCode,\n\tjoinType:'outer',\n\tbroadcast: 'none')~> outmergegeography\noutselectaftermerge split(isNull({country-code})\r\n,\n\tdisjoint: false) ~> outnewitems@(newitems, toupdate)\noutmergegeography select(mapColumn(\n\t\tSourceItemId,\n\t\tname,\n\t\t{alpha-2},\n\t\t{alpha-3},\n\t\t{country-code},\n\t\t{iso_3166-2},\n\t\tregion = outstaginggeography@region,\n\t\t{sub-region},\n\t\t{intermediate-region},\n\t\t{region-code},\n\t\t{sub-region-code},\n\t\t{intermediate-region-code},\n\t\tsysCreatedAt = outstaginggeography@sysCreatedAt,\n\t\tsysChangedAt = outstaginggeography@sysChangedAt,\n\t\tsysChangedBy = outstaginggeography@sysChangedBy,\n\t\tsysCreatedBy = outstaginggeography@sysCreatedBy,\n\t\tDimGeographyKey,\n\t\tDimensionRegion = outdimgeography@Region,\n\t\tDimensionSubRegion = SubRegion,\n\t\tDimensionCountry = Country,\n\t\tDimensionCountryCode = CountryCode,\n\t\tsysCreatedAt = outdimgeography@sysCreatedAt,\n\t\tsysChangedAt = outdimgeography@sysChangedAt,\n\t\tsysChangedBy = outdimgeography@sysChangedBy,\n\t\tsysCreatedBy = outdimgeography@sysCreatedBy\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> outselectaftermerge\noutnewitems@toupdate sink(input(\n\t\tDimGeographyKey as integer,\n\t\tRegion as string,\n\t\tSubRegion as string,\n\t\tCountry as string,\n\t\tCountryCode as string,\n\t\tsysCreatedAt as timestamp,\n\t\tsysChangedAt as timestamp,\n\t\tsysChangedBy as integer,\n\t\tsysCreatedBy as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}