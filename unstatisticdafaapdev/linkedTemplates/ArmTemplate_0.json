{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "unstatisticdafaapdev"
		},
		"LinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedService'"
		},
		"UNstatisticBLOBLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'UNstatisticBLOBLinkedService'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UNstatisticBLOBLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('UNstatisticBLOBLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dst_staging_countryref')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SourceItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "alpha-2",
						"type": "nvarchar"
					},
					{
						"name": "alpha-3",
						"type": "nvarchar"
					},
					{
						"name": "country-code",
						"type": "nvarchar"
					},
					{
						"name": "iso_3166-2",
						"type": "nvarchar"
					},
					{
						"name": "region",
						"type": "nvarchar"
					},
					{
						"name": "sub-region",
						"type": "nvarchar"
					},
					{
						"name": "intermediate-region",
						"type": "nvarchar"
					},
					{
						"name": "region-code",
						"type": "nvarchar"
					},
					{
						"name": "sub-region-code",
						"type": "nvarchar"
					},
					{
						"name": "intermediate-region-code",
						"type": "nvarchar"
					},
					{
						"name": "sysCreatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysChangedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysChangedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysCreatedBy",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "countriesref_untyped"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_src_csv_countryref')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "UNstatisticBLOBLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "all.csv",
						"folderPath": "CountryRef",
						"container": "unstatisticsourcedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UNstatisticBLOBLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_src_csv_uncrimefile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "UNstatisticBLOBLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().filename,'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().path",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "RegionName",
						"type": "String"
					},
					{
						"name": "SubRegionName",
						"type": "String"
					},
					{
						"name": "CountryName",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UNstatisticBLOBLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dst_staging_uncrime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FileName",
						"type": "nvarchar"
					},
					{
						"name": "SourceItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegionName",
						"type": "nvarchar"
					},
					{
						"name": "SubRegionName",
						"type": "nvarchar"
					},
					{
						"name": "CountryName",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "Count",
						"type": "nvarchar"
					},
					{
						"name": "sysCreatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysChangedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysChangedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysCreatedBy",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "staging",
					"table": "uncrime_untyped"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dst_dummy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_src_csv_metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "UNstatisticBLOBLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UNCrime",
						"container": "unstatisticsourcedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UNstatisticBLOBLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unstatistic-extract-countries')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy countries",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SP Log Pipeline start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE  TABLE  [staging].[countriesref_untyped]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "alpha-2",
											"type": "String"
										},
										"sink": {
											"name": "alpha-2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "alpha-3",
											"type": "String"
										},
										"sink": {
											"name": "alpha-3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "country-code",
											"type": "String"
										},
										"sink": {
											"name": "country-code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "iso_3166-2",
											"type": "String"
										},
										"sink": {
											"name": "iso_3166-2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String"
										},
										"sink": {
											"name": "region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sub-region",
											"type": "String"
										},
										"sink": {
											"name": "sub-region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "intermediate-region",
											"type": "String"
										},
										"sink": {
											"name": "intermediate-region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "region-code",
											"type": "String"
										},
										"sink": {
											"name": "region-code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sub-region-code",
											"type": "String"
										},
										"sink": {
											"name": "sub-region-code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "intermediate-region-code",
											"type": "String"
										},
										"sink": {
											"name": "intermediate-region-code",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_src_csv_countryref",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dst_staging_countryref",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SP Log Pipeline start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[usp_PipelineExecutionHistory_Create]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Log Pipeline End",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy countries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[usp_PipelineExecutionHistory_Update]",
							"storedProcedureParameters": {
								"Description": {
									"value": "desc1",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LinkedService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_src_csv_countryref')]",
				"[concat(variables('factoryId'), '/datasets/ds_dst_staging_countryref')]",
				"[concat(variables('factoryId'), '/linkedServices/LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unstatistic-extract-uncrimefile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy uncrimefile",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set container",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set path",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set filename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RegionName",
											"type": "String"
										},
										"sink": {
											"name": "RegionName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubRegionName",
											"type": "String"
										},
										"sink": {
											"name": "SubRegionName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CountryName",
											"type": "String"
										},
										"sink": {
											"name": "CountryName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Count",
											"type": "String"
										},
										"sink": {
											"name": "Count",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_src_csv_uncrimefile",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@variables('container')",
										"type": "Expression"
									},
									"path": {
										"value": "@variables('filepath')",
										"type": "Expression"
									},
									"filename": {
										"value": "@variables('filename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dst_staging_uncrime",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SP Log Pipeline start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[usp_PipelineExecutionHistory_Create]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Log Pipeline End",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Update file name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[usp_PipelineExecutionHistory_Update]",
							"storedProcedureParameters": {
								"Description": {
									"value": "desc1",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get configuration",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Log Pipeline start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[usp_Configuration_Get]",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_dst_dummy",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set container",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "container",
							"value": {
								"value": "@activity('Get configuration').output.firstrow.container",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set path",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "filepath",
							"value": {
								"value": "@activity('Get configuration').output.firstrow.UNCrimepath",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set filename",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "filename",
							"value": {
								"value": "@pipeline().parameters.filename",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Update file name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy uncrimefile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\n  UPDATE [staging].[uncrime_untyped]\n  SET [FileName] = 'bribery'\n  WHERE [FileName] IS NULL\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_dst_dummy",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"variables": {
					"container": {
						"type": "String"
					},
					"filepath": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_src_csv_uncrimefile')]",
				"[concat(variables('factoryId'), '/datasets/ds_dst_staging_uncrime')]",
				"[concat(variables('factoryId'), '/linkedServices/LinkedService')]",
				"[concat(variables('factoryId'), '/datasets/ds_dst_dummy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unstatistic-master-extract')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Log Pipeline start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[usp_PipelineExecutionHistory_Create]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Log Pipeline End",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "unstatistic-extract-countries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[usp_PipelineExecutionHistory_Update]",
							"storedProcedureParameters": {
								"Description": {
									"value": "desc1",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "unstatistic-extract-countries",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SP Log Pipeline start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "unstatistic-extract-countries",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService')]",
				"[concat(variables('factoryId'), '/pipelines/unstatistic-extract-countries')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "unstatistic-extract-countries",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-03-05T07:29:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/unstatistic-extract-countries')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unstatistic-master-extract-uncrimefile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Log Pipeline start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[usp_PipelineExecutionHistory_Create]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP Log Pipeline End",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[usp_PipelineExecutionHistory_Update]",
							"storedProcedureParameters": {
								"Description": {
									"value": "desc1",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get configuration",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Log Pipeline start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[usp_Configuration_Get]",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_dst_dummy",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set container",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "container",
							"value": {
								"value": "@activity('Get configuration').output.firstrow.container",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set path",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "filepath",
							"value": {
								"value": "@activity('Get configuration').output.firstrow.UNCrimepath",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Truncate  uncrime_untyped",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set container",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set path",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  TRUNCATE TABLE [staging].[uncrime_untyped];\nSELECT 1;",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "ds_dst_dummy",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate  uncrime_untyped",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_src_csv_metadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childitems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@{item().name}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "unstatistic-extract-uncrimefile",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"filename": {
												"value": "@variables('filename')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"container": {
						"type": "String"
					},
					"filepath": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService')]",
				"[concat(variables('factoryId'), '/datasets/ds_dst_dummy')]",
				"[concat(variables('factoryId'), '/datasets/ds_src_csv_metadata')]",
				"[concat(variables('factoryId'), '/pipelines/unstatistic-extract-uncrimefile')]"
			]
		}
	]
}